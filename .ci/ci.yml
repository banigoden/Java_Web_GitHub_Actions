---
name: Deploy Infrastructure and Web Application

on: # yamllint disable-line rule:truthy
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

  env:
    AWS_REGION: 'us-west-2'
    IMAGE_NAME: 'banigoden/web_app'
    IMAGE_VERSION: ${{ github.run_number }}
    BRANCH_NAME: ${{ github.ref_name }}

  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init
      working-directory: .deployment/terraform

    - name: Apply Terraform
      run: terraform apply -auto-approve
      working-directory: .deployment/terraform

    - name: Install Ansible
      run: |
        python -m pip install --upgrade pip
        pip install ansible

    - name: Run Ansible Playbook
      env:
        ANSIBLE_HOST_KEY_CHECKING: 'false'
      run: |
        ansible-playbook deploy.yml -i inventory

    - name: Build Docker Image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }} .

    - name: Push Docker Image to Registry
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

    - name: Bring up Docker Compose services
      run: |
        ssh user@your_server "cd /path/to/remote && docker-compose up -d"

    - name: Bring down Docker Compose services
      run: |
        ssh user@your_server "cd /path/to/remote && docker-compose down"
