---
name: Deploy Infrastructure and Web Application

on: [push, workflow_dispatch] # yamllint disable-line rule:truthy

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'eu-central-1'
  IMAGE_NAME: 'web_app-ghcr'
  IMAGE_VERSION: 'latest'
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.3.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }}:v${{ env.IMAGE_VERSION }} .
        working-directory: deployment/docker

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Push Docker Image to Registry
        run: |
          cd deployment/docker \
          && docker build . -t ghcr.io/banigoden/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          docker push ghcr.io/banigoden/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}

      - name: Install make and tfmask
        run: |
          sudo apt-get update
          sudo apt-get install -y make wget
          sudo wget https://github.com/cloudposse/tfmask/releases/download/0.7.0/tfmask_linux_amd64 -O /usr/bin/tfmask
          sudo chmod 755 /usr/bin/tfmask

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"

      - name: Install AWS CLI
        run: sudo apt-get install -y awscli

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Initialize Terraform
        id: init
        run: make init
        working-directory: deployment/terraform

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform validate
        id: validate
        run: make validate
        working-directory: deployment/terraform

      - name: Terraform Plan
        id: plan
        run: make plan
        working-directory: deployment/terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: deployment/terraform

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Ansible Playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: 'false'
        run: ansible-playbook playbook.yml -i inventory/ansible-inventory
        working-directory: deployment/ansible
